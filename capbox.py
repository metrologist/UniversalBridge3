"""
Deals with a decade capacitance box where the change in capacitance generated by each dial switch is reported and
a separate measurement of the total capacitance when all dials are set to zero is also given.
"""
from GTC import ureal
from ubridge3 import UNIVERSALBRIDGE
from calculate_imp import UUT

ang_freq = 1e4
calfile = r'ubdict_dec_2019.csv'
room_temperature = ureal(20, 0.5, 10, 'temperature')  # this should be the ambient temperature given in conditions
# create the bridge object
my_ubridge = UNIVERSALBRIDGE(calfile, room_temperature)  # consider relevance of chosen temperature
block_descriptor = [9, 70, 1, 15]  # this simply has to correctly match the spreadsheet.
cap_set = UUT(my_ubridge, 'DecadeCap.xlsx', 'pyUBreadings', block_descriptor, 'decadeCap_Results.xlsx', 'pyUBresults')

# note that a different temperature could be used for the UUT
cap_answers, cap_zeros = cap_set.calculate_values(room_temperature, my_ubridge)
vernier = ureal(0, 0.5e-12, 5, label='vernier setting')  # repeatability of setting the vernier dial, 0.5 pF
series_r = ureal(0, 5e-3, 6, label='series resistance')  # 5 milliohm stdev  on assumed zero series resistance.
test_values, test_zeros, test_corrected = cap_set.subtract_box_zeros(cap_answers,
                                    ['coax zero', 'GR1000A', 'GR1000B', 'CuZero'], vernier, series_r)
zero_uncert = ureal(0, 0.6e-12, 5, label='box zero uncertainty')
final_zero, index = cap_set.main_zero(cap_answers, zero_uncert)
test_corrected[index] = final_zero
print('index', index)
cmc_list = cap_set.cmc_check(my_ubridge)
cap_set.create_output(test_corrected, cmc_list)

for x in test_corrected:
    print(x)

print(test_corrected[index])
